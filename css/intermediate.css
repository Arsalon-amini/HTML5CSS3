/* Universal Selector - apply sizing border-box to all HTML elements */
*, *::before, *::after {
    box-sizing: border-box;
}

/* HTML root element - set font-size of root -> 62.5% of 16pt = 10pt font */
html {
    font-size: 62.5%
}

body {
    margin: 10px;
    width: 300px;
    font-size: 10;
}

/* Box Model - Margins and Padding*/
p {
    padding: 20px; /*top, right, bottom, left (trbl) */
    border: 5px solid gold;
    margin: 0;
}

.example {
    margin: 20px;
    padding: 20px;
}

/* Sizing Elements */
.box {
    width: 100px;
    height: 100px;
    background: gold;
    display: inline-block
}

.box::before{
    content: "hello"; 
}

.boxOverFlow {
    border: 3px solid gold;
    width: 150px;
    height: 150px;
    overflow: hidden auto;
}

.boxAbsolute {
    width: 100px;
    height: 100px;
    background-color: gold;
    border-top: 3px solid orange;
}

/* % of parent element */
.boxRelative {
    width: 50%; /* vw are view-width */
    height: 100vh; /* vh view-height ex. 100% of viewport (available screen) */
    background-color: gold;
    border-top: 3px solid orange;
}


/* em units - ex. 10em = 10x font size of current element -> 10 x 16px (default) = 160px*/
.boxText {
    width: 10em;
    height: 50vh;
    background-color: gold;
    border-top: 3px solid orange;
}

/* em units - sizing relative to font size -  ex. 10em = 10x font size of current element -> 10 x 16px (default) = 160px*/
.box2Text {
    width: 10rem;
    height: 50vh;
    background-color: gold;
    border-top: 3px solid orange;
}

/* Positing Elements */
body {
    height: 200vh;
    margin: 10px;
}

.boxes {
    border: 3px solid lightgrey;
    position: relative; /* Must be set to relative to position elements relative to container */
}

.box {
    width: 5rem;
    height: 5rem;
}

/* Positioned relative to the element's normal position */
.box-one {
    background: gold;
    position: relative;
    left: 30rem;
}

/* Absolute relative to parent (container element) */
.box-two {
    background: tomato;
    position: absolute;
    left: 4rem; /* adds 65 px space on left between container and element */
    top: 1rem;
}

/* fixed - relative to viewport - auto sizing using only left/right spacing */
.box-three {
    background: dodgerblue;
    position: fixed;
    left: 2rem;
    right: 2rem;
    width: auto;
}

/* Sticky Header Navigation Bar - fixed position relative to viewport */
.box-four{
    background: linear-gradient( blue, yellow);
    position: fixed;
    width: 200px;
    top: 0;
    left: 10rem;
    z-index: 1;
}

/* DON'T USE - replace by flexbox or grid layout systems*/

/* Floating elements - allows other elements to wrap around */
.avatar {
    width: 5rem;
    height: 5rem;
    background-color: gold;
    float: left; 
    margin-right: 0.5rem;
}

/* Floating elements - by default are ignored by parent elements */
.tweet {
    border: 3px solid lightgrey; 
}

/* Solves floating elements ignored by parent containers*/
.clearfix::after {
    content: '';
    display: block;
    clear: both;
}

/* clear - removes float properties for other elements in container  */
.clear {
    clear: both;
}

/* Flexible Box layout (flex) - vertical and horizontal alignment */
.container {
    border: 3px solid lightgrey; 
    display: flex;
    flex-direction: row;
    justify-content: center; /* align item along primary axis (horizontal = row primary axis)*/
    align-items: center; /* align item along cross axis (vertical)*/
    height: 80vh; /* 80% of viewport height (screen height) */
    flex-wrap: wrap; /* all elements to cover multiple lines if screen changes size*/
    align-content: center; /* align multiple content lines in container*/
}

.box {
    width: 5rem;
    height: 5rem;
    background: gold;
    margin: 1rem;
}